// Generated by CoffeeScript 1.8.0
var clone, containsText, formatLocation, formatObject, _locationFormats;

clone = require('clone');

_locationFormats = {
  full: ['%(addressLine), %(city), %(state) %(zip)', ', '],
  fullMultiline: ['%(addressLine)\n%(city), %(state) %(zip)', '\n'],
  city: ['%(addressLine), %(city)', ', '],
  zip: ['%(addressLine), %(zip)', ', '],
  cityStateZip: ['%(city), %(state) %(zip)', ''],
  short: ['%(addressLine)', ', '],
  shortMultiline: ['%(addressLine)', '\n'],
  shortVague: ['%(vagueAddress)', ', ']
};

formatObject = function(obj, formatString) {
  var paramRegex;
  paramRegex = /%\((\w+)\)/g;
  return formatString.replace(paramRegex, function(match, key) {
    return obj[key] || '';
  });
};

containsText = function(string) {
  return !!(string != null ? string.trim().length : void 0);
};

module.exports = formatLocation = function(location, formatString) {
  var addressLineSeparator, format, _ref;
  if (!(location.city && location.zip && location.state)) {
    return location.address;
  }
  _ref = _locationFormats[formatString] || [formatString, ', '], format = _ref[0], addressLineSeparator = _ref[1];
  location = clone(location);
  location.addressLine = [location.address, location.address2].filter(containsText).join(addressLineSeparator);
  location.vagueAddress = location.vagueAddress || location.addressLine;
  return formatObject(location, format);
};

formatLocation.formats = _locationFormats;
